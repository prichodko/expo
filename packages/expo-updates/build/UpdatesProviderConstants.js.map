{"version":3,"file":"UpdatesProviderConstants.js","sourceRoot":"","sources":["../src/UpdatesProviderConstants.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,WAAW,CAAC;AAErC,qCAAqC;AAErC,iEAAiE;AACjE,MAAM,CAAC,MAAM,gBAAgB,GAAyB;IACpD,QAAQ,EAAE,OAAO,CAAC,QAAQ;IAC1B,OAAO,EAAE,OAAO,CAAC,OAAO;IACxB,SAAS,EAAE,OAAO,CAAC,SAAS;IAC5B,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;IAC1C,iBAAiB,EAAE,OAAO,CAAC,iBAAiB;IAC5C,QAAQ,EAAE,OAAO,CAAC,QAAQ;IAC1B,cAAc,EAAE,OAAO,CAAC,cAAc;CACvC,CAAC;AAEF;;;GAGG;AACH,MAAM,CAAN,IAAY,wBAiCX;AAjCD,WAAY,wBAAwB;IAClC;;OAEG;IACH,uDAA2B,CAAA;IAC3B;;OAEG;IACH,6DAAiC,CAAA;IACjC;;OAEG;IACH,uDAA2B,CAAA;IAC3B;;OAEG;IACH,6DAAiC,CAAA;IACjC;;OAEG;IACH,mEAAuC,CAAA;IACvC;;OAEG;IACH,6DAAiC,CAAA;IACjC;;OAEG;IACH,mDAAuB,CAAA;IACvB;;OAEG;IACH,mDAAuB,CAAA;AACzB,CAAC,EAjCW,wBAAwB,KAAxB,wBAAwB,QAiCnC","sourcesContent":["import * as Updates from './Updates';\nimport type { CurrentlyRunningInfo } from './UpdatesProvider.types';\n/////// Constants and enums  ////////\n\n// The currently running info, constructed from Updates constants\nexport const currentlyRunning: CurrentlyRunningInfo = {\n  updateId: Updates.updateId,\n  channel: Updates.channel,\n  createdAt: Updates.createdAt,\n  isEmbeddedLaunch: Updates.isEmbeddedLaunch,\n  isEmergencyLaunch: Updates.isEmergencyLaunch,\n  manifest: Updates.manifest,\n  runtimeVersion: Updates.runtimeVersion,\n};\n\n/**\n * Enumeration of the different possible event types passed into calls to the optional\n * `providerEventHandler` of [`useUpdates()`](#useupdatesprovidereventhandler).\n */\nexport enum UpdatesProviderEventType {\n  /**\n   * Type of event emitted when `checkForUpdate()` starts.\n   */\n  CHECK_START = 'check_start',\n  /**\n   * Type of event emitted when `checkForUpdate()` completes successfully.\n   */\n  CHECK_COMPLETE = 'check_complete',\n  /**\n   * Type of event emitted when `checkForUpdate()` completes with an error.\n   */\n  CHECK_ERROR = 'check_error',\n  /**\n   * Type of event emitted when update download starts.\n   */\n  DOWNLOAD_START = 'download_start',\n  /**\n   * Type of event emitted when update download completes successfully.\n   */\n  DOWNLOAD_COMPLETE = 'download_complete',\n  /**\n   * Type of event emitted when update download completes with an error.\n   */\n  DOWNLOAD_ERROR = 'download_error',\n  /**\n   * Type of event emitted when `runUpdate()` starts.\n   */\n  RUN_START = 'run_start',\n  /**\n   * Type of event emitted when `runUpdate()` completes with an error.\n   */\n  RUN_ERROR = 'run_error',\n}\n"]}