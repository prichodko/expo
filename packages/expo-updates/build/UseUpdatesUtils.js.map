{"version":3,"file":"UseUpdatesUtils.js","sourceRoot":"","sources":["../src/UseUpdatesUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Updates from './Updates';\nimport type { UpdateEvent } from './Updates.types';\nimport type {\n  AvailableUpdateInfo,\n  CurrentlyRunningInfo,\n  Manifest,\n  UpdatesInfo,\n  UseUpdatesCallbacksType,\n} from './UseUpdates.types';\n\n// The currently running info, constructed from Updates constants\nexport const currentlyRunning: CurrentlyRunningInfo = {\n  updateId: Updates.updateId,\n  channel: Updates.channel,\n  createdAt: Updates.createdAt,\n  isEmbeddedLaunch: Updates.isEmbeddedLaunch,\n  isEmergencyLaunch: Updates.isEmergencyLaunch,\n  manifest: Updates.manifest,\n  runtimeVersion: Updates.runtimeVersion,\n};\n\n/////// Internal functions ////////\n\n// Constructs the availableUpdate from the update manifest\nexport const availableUpdateFromManifest = (manifest: Manifest | null | undefined) => {\n  return manifest\n    ? {\n        updateId: manifest?.id ?? null,\n        createdAt:\n          manifest && 'createdAt' in manifest && manifest.createdAt\n            ? new Date(manifest.createdAt)\n            : manifest && 'publishedTime' in manifest && manifest.publishedTime\n            ? new Date(manifest.publishedTime)\n            : null,\n        manifest,\n      }\n    : undefined;\n};\n\n// Constructs the UpdatesInfo from an event\nexport const updatesInfoFromEvent = (\n  updatesInfo: UpdatesInfo | undefined,\n  event: UpdateEvent\n): UpdatesInfo => {\n  switch (event.type) {\n    case Updates.UpdateEventType.NO_UPDATE_AVAILABLE:\n      return {\n        ...updatesInfo,\n        currentlyRunning,\n        availableUpdate: undefined,\n        error: undefined,\n        lastCheckForUpdateTimeSinceRestart: new Date(),\n      };\n    case Updates.UpdateEventType.UPDATE_AVAILABLE:\n      return {\n        ...updatesInfo,\n        currentlyRunning,\n        availableUpdate: availableUpdateFromManifest(event.manifest),\n        error: undefined,\n        lastCheckForUpdateTimeSinceRestart: new Date(),\n      };\n    case Updates.UpdateEventType.ERROR:\n      return {\n        ...updatesInfo,\n        currentlyRunning,\n        availableUpdate: undefined,\n        error: new Error(event.message),\n        lastCheckForUpdateTimeSinceRestart: new Date(),\n      };\n  }\n};\n\n// Implementation of checkForUpdate\nexport const checkForUpdateAndReturnAvailableAsync: (\n  callbacks?: UseUpdatesCallbacksType\n) => Promise<AvailableUpdateInfo | undefined> = async (callbacks) => {\n  try {\n    callbacks?.onCheckForUpdateStart && callbacks?.onCheckForUpdateStart();\n    const checkResult = await Updates.checkForUpdateAsync();\n    callbacks?.onCheckForUpdateComplete && callbacks?.onCheckForUpdateComplete();\n    if (checkResult.isAvailable) {\n      return availableUpdateFromManifest(checkResult.manifest);\n    } else {\n      return undefined;\n    }\n  } catch (error: any) {\n    callbacks?.onCheckForUpdateError && callbacks?.onCheckForUpdateError(error);\n    throw error;\n  }\n};\n\n// Implementation of downloadUpdate\nexport const downloadUpdateAsync = async (callbacks?: UseUpdatesCallbacksType) => {\n  try {\n    callbacks?.onDownloadUpdateStart && callbacks?.onDownloadUpdateStart();\n    await Updates.fetchUpdateAsync();\n    callbacks?.onDownloadUpdateComplete && callbacks?.onDownloadUpdateComplete();\n  } catch (error: any) {\n    callbacks?.onDownloadUpdateError && callbacks?.onDownloadUpdateError(error);\n    throw error;\n  }\n};\n\n// Implementation of runUpdate\nexport const runUpdateAsync = async (callbacks?: UseUpdatesCallbacksType) => {\n  try {\n    callbacks?.onRunUpdateStart && callbacks?.onRunUpdateStart();\n    await Updates.reloadAsync();\n  } catch (error: any) {\n    callbacks?.onRunUpdateError && callbacks?.onRunUpdateError();\n    throw error;\n  }\n};\n\n// Implementation of downloadAndRunUpdate\nexport const downloadAndRunUpdateAsync = async (callbacks?: UseUpdatesCallbacksType) => {\n  await downloadUpdateAsync(callbacks);\n  await runUpdateAsync(callbacks);\n};\n"]}